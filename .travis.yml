---
stages:
  - name: "lint"
  - name: "test"
  - name: "deploy-github"
    if: "tag IS present"
  - name: "deploy-pypi"
    if: "tag IS present"

language: "python"
python:
  - 3.6
  - 3.7
  - 3.8

# Testing 1.0.3 as it is still pre-Celery, but has the choices test fix nautobot#457
# 1.0.2 would also work, it would just skip the choices test.
env:
  - "INVOKE_NAUTOBOT_CHATOPS_NAUTOBOT_VER=1.0.3"
  - "INVOKE_NAUTOBOT_CHATOPS_NAUTOBOT_VER=1.1.2"

services:
  - "docker"

# --------------------------------------------------------------------------
# Tests
# --------------------------------------------------------------------------
before_script:
  - "pip install invoke toml docker-compose poetry"
  - "cp development/creds.example.env development/creds.env"
  - "poetry add nautobot==$INVOKE_NAUTOBOT_CHATOPS_NAUTOBOT_VER"
script:
  - "INVOKE_NAUTOBOT_CHATOPS_PYTHON_VER=$TRAVIS_PYTHON_VERSION invoke build --no-cache"
  - "INVOKE_NAUTOBOT_CHATOPS_PYTHON_VER=$TRAVIS_PYTHON_VERSION invoke unittest"

jobs:
  include:
    - stage: "lint"
      before_script:
        - "pip install invoke toml docker-compose"
        - "cp development/creds.example.env development/creds.env"
        - "invoke build"
      script:
        - "invoke black"
        - "invoke bandit"
        - "invoke pydocstyle"
        - "invoke flake8"
        - "invoke yamllint"
        - "invoke pylint"

    - stage: "deploy-github"
      before_script:
        - "pip install poetry"
      script:
        - "poetry version $TRAVIS_TAG"
        - "poetry build"
      deploy:
        provider: "releases"
        api_key: "$GITHUB_AUTH_TOKEN"
        file_glob: true
        file: "dist/*"
        skip_cleanup: true
        on:
          all_branches: true

    - stage: "deploy-pypi"
      before_script:
        - "pip install poetry"
      script:
        - "poetry version $TRAVIS_TAG"
        - "poetry config pypi-token.pypi $PYPI_TOKEN"
        - "poetry publish --build"
